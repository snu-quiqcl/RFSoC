/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "lwip/init.h"
#include "lwip/netif.h"
#include "lwip/tcp.h"
#include "xuartps.h"

#define SERVER_PORT 5001
#define BUFFER_SIZE 1024

void tcp_server_thread(void *arg) {
    struct netconn *conn, *newconn;
    err_t err;
    struct netbuf *buf;
    void *data;
    u16_t len;

    conn = netconn_new(NETCONN_TCP);
    if (conn == NULL) {
        printf("Failed to create TCP server connection.\r\n");
        return;
    }

    err = netconn_bind(conn, IP_ADDR_ANY, SERVER_PORT);
    if (err != ERR_OK) {
        printf("Failed to bind TCP server.\r\n");
        netconn_delete(conn);
        return;
    }

    netconn_listen(conn);

    while (1) {
        err = netconn_accept(conn, &newconn);
        if (err == ERR_OK) {
            while ((err = netconn_recv(newconn, &buf)) == ERR_OK) {
                do {
                    netbuf_data(buf, &data, &len);
                    // Echo received data via UART
                    XUartPs_Send(&UartPsInstance, data, len);
                } while (netbuf_next(buf) >= 0);
                netbuf_delete(buf);
            }

            netconn_close(newconn);
            netconn_delete(newconn);
        }
    }
}

int main() {
    // Initialize UART
    XUartPs_Config *uart_config;
    uart_config = XUartPs_LookupConfig(XPAR_XUARTPS_0_DEVICE_ID);
    XUartPs_CfgInitialize(&UartPsInstance, uart_config, uart_config->BaseAddress);

    // Initialize LWIP stack
    lwip_init();

    // Start the TCP server thread
    tcp_server_thread(NULL);  // Run the thread function directly

    // Main loop
    while (1) {
        sys_check_timeouts();
        // Handle other tasks or events
    }

    return 0;
}
